# -*- mode: ruby -*-
# vi: set ft=ruby :
Vagrant.configure("2") do |config|
  config.vm.box = "generic/oracle8"
  config.vm.hostname = "dev-vm"

  config.vm.network "forwarded_port", guest: 8080, host: 8080
  config.vm.network "forwarded_port", guest: 8090, host: 8090
  config.vm.network "public_network"

  config.vm.synced_folder "../../../../azure-challenge-solutions", "/home/vagrant/azure-challenge-solutions"

  
  config.vm.provider "hyper-v" do |hv|
    hv.cpus = "2"
    hv.memory = "4096"
    hv.name = "dev-vm"
    hv.enable_virtualization_extensions = true
    hv.linked_clone = true
    hv.gui = true
  end

  config.vm.provision "shell", inline: <<-SHELL
  #!/usr/bin/env bash
  
  [ "$(whoami)" = root ] || { sudo "$0" "$@"; exit $?; }
  
  #Using bash strict mode causes sourcing the bashrc to fail so exporting path becomes harder when executing cloud-init.
  set -xeuo pipefail
  
  #It's normally not a good idea to execute containers as root, but I am doing so for this challenge as non-root in Oracle Linux is alien to me.
  cd /root
  
  yum update -y && \
    yum install -y \
    curl \
    podman \
    python3-pip \
    git && \
  
    timedatectl set-timezone Europe/London && \
    firewall-cmd --zone=public --add-port=8080/tcp && \
    firewall-cmd --zone=public --add-port=8090/tcp && \
    firewall-cmd --reload && \
    loginctl enable-linger 1000


  SHELL

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
if [ "$(command -v pip3)" ]; then

        /bin/pip3 install podman-compose && \

        rm -rf azure-challenge-solutions && \
        /bin/git clone https://github.com/craigthackerx/azure-challenge-solutions.git && \
        cd azure-challenge-solutions/container/podman/grafana && \
        mkdir -p grafana-data && \
        echo "The VM is now setup." && \

        yum clean all && \

        cd .. && /root/.local/bin/podman-compose up -d && exit 0

else
    echo "Error running user script" && exit 1
fi

  SHELL
end